
I frequently get asked by non-technical solo
founders if I know any potential hacker cofounders they should talk to.
 These people give a passionate pitch for the idea and a long list of all
the hustling they've done, customers they've spoken to, models they've built,
provisional patents they've filed, etc.  Most of the time, they are
thoughtful and hardworking.  But they've often been searching for their
technical cofounder for many months, and things have stalled during that process. 
When people like this say "I'll do
whatever it takes to make this business successful" (which they almost
always say), I say something like "Why not learn to hack?  Although
it takes many, many years to become a great hacker, you can learn to be good
enough to build your site or app in a few months.  And even if you're not
going to build the next version, if you're going to run a software company, it
seems like a good idea to know a little bit about it."
Usually the response is something like
"That wouldn't be the best use of my time", "I don't like
it", or "I don't have that kind of brain".  (Earlier today
it was "You don't understand, I'm the idea guy.  If I'm hacking, who
will be talking to investors?", which is what prompted this post.)
 But every once in awhile people think about it and decide to learn to
hack, and it usually works out.
They’re often surprised how easy it is.  Many hackers love to help people who are just
starting.  There are tutorials for pretty
much everything and great libraries and frameworks.
As an important aside, if you try to learn on
your own, it can be really hard.  You’ll
hit some weird ruby error and give up. 
It’s important to have someone—a friend, a teacher at a coding bootcamp,
etc.—that get you through these frustrating blocks.
When hackers have to for their startups, they
are willing to learn business stuff.  Business people should do the same.
 If you're not willing to do this, you should remember that there are far
greater challenges coming in the course of a startup than learning how to code.
 You should also remember that you can probably learn to code in less time
than it will take to find the right cofounder.
Speaking of cofounders, a word of warning:
meeting a stranger for the express purpose of cofounders hardly ever works.
 You want someone you've known for awhile and already worked with.
 This is another good reason for learning to hack yourself instead of
bringing on a cofounder.
You can build the first version of your
product, and even if it's terrible (we had a non-technical founder in YC that
learned to hack with Codecademy and was still able to learn enough to build a
prototype), you'll actually be able to get real user feedback, iterate on
something other than mockups, and perhaps impress a great hacker enough to join
you.  Although you may never win a Turing Award, if you're smart and
determined, you can certainly get good enough to build a meaningful version 1.
If you're a solo founder and you can't hack,
learn.
